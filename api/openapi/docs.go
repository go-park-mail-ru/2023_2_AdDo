// Package openapi Code generated by swaggo/swag. DO NOT EDIT
package openapi

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/album/{id}": {
            "get": {
                "description": "return album info with all tracks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "album id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/album.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/artist/{id}": {
            "get": {
                "description": "return artist info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "artist"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "artist id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/artist.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "description": "check user's authentication by cookie and set csrf-token",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Set X-Csrf-Token in Cookie"
                            },
                            "X-Csrf-Token": {
                                "type": "string",
                                "description": "Set X-Csrf-Token in header"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Set X-Csrf-Token in Cookie"
                            },
                            "X-Csrf-Token": {
                                "type": "string",
                                "description": "Set X-Csrf-Token in header"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/feed": {
            "get": {
                "description": "return all albums",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/album.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/like": {
            "post": {
                "security": [
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "like track",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "parameters": [
                    {
                        "description": "track id",
                        "name": "trackId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/track.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/listen": {
            "post": {
                "security": [
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "listen track",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "parameters": [
                    {
                        "description": "track id",
                        "name": "trackId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "login user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "User email and password",
                        "name": "userCrds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.UserCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Set JSESSIONID in Cookie"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "logout user",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "get user info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_domain.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/most_liked": {
            "get": {
                "description": "return albums sorted by likes count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/album.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/new": {
            "get": {
                "description": "return new albums",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/album.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/popular": {
            "get": {
                "description": "return albums sorted by listen count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "album"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/album.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/remove_avatar": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "Remove user avatar",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sign_up": {
            "post": {
                "security": [
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "register user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "User data",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_domain.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "Set JSESSIONID in Cookie"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/upload_avatar": {
            "post": {
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "csrfToken": []
                    },
                    {
                        "cookieCsrfToken": []
                    }
                ],
                "description": "Upload user avatar",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "User avatar",
                        "name": "Avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_domain.UploadAvatarResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "album.Base": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "example": 1
                },
                "Name": {
                    "type": "string",
                    "example": "AlbumName"
                },
                "Preview": {
                    "type": "string",
                    "example": "AlbumPreview"
                }
            }
        },
        "album.Response": {
            "type": "object",
            "properties": {
                "ArtistId": {
                    "type": "integer",
                    "example": 1
                },
                "ArtistName": {
                    "type": "string",
                    "example": "ArtistName"
                },
                "Id": {
                    "type": "integer",
                    "example": 1
                },
                "Name": {
                    "type": "string",
                    "example": "AlbumName"
                },
                "Preview": {
                    "type": "string",
                    "example": "AlbumPreview"
                },
                "Tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/track.Response"
                    }
                }
            }
        },
        "artist.Response": {
            "type": "object",
            "properties": {
                "Albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/album.Base"
                    }
                },
                "Avatar": {
                    "type": "string",
                    "example": "ArtistAvatar"
                },
                "Id": {
                    "type": "integer",
                    "example": 1
                },
                "Name": {
                    "type": "string",
                    "example": "ArtistName"
                },
                "Tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/track.Response"
                    }
                }
            }
        },
        "track.Response": {
            "type": "object",
            "properties": {
                "Content": {
                    "type": "string",
                    "example": "TrackContent"
                },
                "Id": {
                    "type": "integer",
                    "example": 1
                },
                "Name": {
                    "type": "string",
                    "example": "TrackName"
                },
                "Preview": {
                    "type": "string",
                    "example": "TrackPreview"
                }
            }
        },
        "user_domain.UploadAvatarResponse": {
            "type": "object",
            "properties": {
                "AvatarUrl": {
                    "type": "string",
                    "example": "/user-avatar/avatar.png"
                }
            }
        },
        "user_domain.User": {
            "type": "object",
            "properties": {
                "Avatar": {
                    "type": "string",
                    "example": "http://test/image/1.jpg,http://test/image/2.jpg"
                },
                "BirthDate": {
                    "type": "string",
                    "example": "2000-01-01"
                },
                "Email": {
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "Id": {
                    "type": "string",
                    "example": "qwer-werw-we4w"
                },
                "Password": {
                    "type": "string",
                    "example": "password"
                },
                "Username": {
                    "type": "string",
                    "example": "john"
                }
            }
        },
        "user_domain.UserCredentials": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "Password": {
                    "type": "string",
                    "example": "password"
                }
            }
        }
    },
    "securityDefinitions": {
        "cookieAuth": {
            "type": "apiKey",
            "name": "JSESSIONID",
            "in": "cookie"
        },
        "cookieCsrfToken": {
            "type": "apiKey",
            "name": "X-Csrf-Token",
            "in": "cookie"
        },
        "csrfToken": {
            "type": "apiKey",
            "name": "X-Csrf-Token",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "musicon.space",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "MusicOn API",
	Description:      "Music web app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
