basePath: /api/v1
definitions:
  user_domain.UploadAvatarResponse:
    properties:
      AvatarUrl:
        example: /user-avatar/avatar.png
        type: string
    type: object
  user_domain.User:
    properties:
      Avatar:
        example: http://test/image/1.jpg,http://test/image/2.jpg
        type: string
      BirthDate:
        example: "2000-01-01"
        type: string
      Email:
        example: example@gmail.com
        type: string
      Id:
        example: 1
        type: integer
      Password:
        example: password
        type: string
      Username:
        example: john
        type: string
    type: object
  user_domain.UserCredentials:
    properties:
      Email:
        example: example@gmail.com
        type: string
      Password:
        example: password
        type: string
    type: object
host: musicon.space
info:
  contact: {}
  description: Music web app
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MusicOn API
  version: "1.0"
paths:
  /auth:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_domain.User'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - cookieAuth: []
      - csrfToken: []
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User email and password
        in: body
        name: userCrds
        required: true
        schema:
          $ref: '#/definitions/user_domain.UserCredentials'
      responses:
        "200":
          description: OK
          headers:
            JSESSIONID:
              description: cookie
              type: string
            X-CSRFTOKEN:
              description: csrf token
              type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - user
  /logout:
    post:
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - cookieAuth: []
      - csrfToken: []
      tags:
      - user
  /me:
    get:
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - cookieAuth: []
      - csrfToken: []
      tags:
      - user
  /remove_avatar:
    post:
      description: Remove user avatar
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - cookieAuth: []
      - csrfToken: []
      - cookieCsrfToken: []
      tags:
      - user
  /sign_up:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/user_domain.User'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - user
  /upload_avatar:
    post:
      description: Upload user avatar
      parameters:
      - description: User avatar
        in: formData
        name: Avatar
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_domain.UploadAvatarResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - cookieAuth: []
      - csrfToken: []
      - cookieCsrfToken: []
      tags:
      - user
securityDefinitions:
  cookieAuth:
    in: header
    name: JSESSIONID
    type: apiKey
  csrfToken:
    in: header
    name: X-Csrf-Token
    type: apiKey
swagger: "2.0"
