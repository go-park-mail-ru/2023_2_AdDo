// Code generated by protoc-gen-go. DO NOT EDIT.
// source: album.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "main/internal/microservices/session/proto"
	proto1 "main/internal/microservices/track/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsLikedAlbum struct {
	IsLiked              bool     `protobuf:"varint,1,opt,name=IsLiked,proto3" json:"IsLiked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsLikedAlbum) Reset()         { *m = IsLikedAlbum{} }
func (m *IsLikedAlbum) String() string { return proto.CompactTextString(m) }
func (*IsLikedAlbum) ProtoMessage()    {}
func (*IsLikedAlbum) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{0}
}

func (m *IsLikedAlbum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsLikedAlbum.Unmarshal(m, b)
}
func (m *IsLikedAlbum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsLikedAlbum.Marshal(b, m, deterministic)
}
func (m *IsLikedAlbum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsLikedAlbum.Merge(m, src)
}
func (m *IsLikedAlbum) XXX_Size() int {
	return xxx_messageInfo_IsLikedAlbum.Size(m)
}
func (m *IsLikedAlbum) XXX_DiscardUnknown() {
	xxx_messageInfo_IsLikedAlbum.DiscardUnknown(m)
}

var xxx_messageInfo_IsLikedAlbum proto.InternalMessageInfo

func (m *IsLikedAlbum) GetIsLiked() bool {
	if m != nil {
		return m.IsLiked
	}
	return false
}

type AlbumToUserId struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AlbumId              uint64   `protobuf:"varint,2,opt,name=albumId,proto3" json:"albumId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlbumToUserId) Reset()         { *m = AlbumToUserId{} }
func (m *AlbumToUserId) String() string { return proto.CompactTextString(m) }
func (*AlbumToUserId) ProtoMessage()    {}
func (*AlbumToUserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{1}
}

func (m *AlbumToUserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumToUserId.Unmarshal(m, b)
}
func (m *AlbumToUserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumToUserId.Marshal(b, m, deterministic)
}
func (m *AlbumToUserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumToUserId.Merge(m, src)
}
func (m *AlbumToUserId) XXX_Size() int {
	return xxx_messageInfo_AlbumToUserId.Size(m)
}
func (m *AlbumToUserId) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumToUserId.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumToUserId proto.InternalMessageInfo

func (m *AlbumToUserId) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AlbumToUserId) GetAlbumId() uint64 {
	if m != nil {
		return m.AlbumId
	}
	return 0
}

type AlbumId struct {
	AlbumId              uint64   `protobuf:"varint,1,opt,name=albumId,proto3" json:"albumId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlbumId) Reset()         { *m = AlbumId{} }
func (m *AlbumId) String() string { return proto.CompactTextString(m) }
func (*AlbumId) ProtoMessage()    {}
func (*AlbumId) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{2}
}

func (m *AlbumId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumId.Unmarshal(m, b)
}
func (m *AlbumId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumId.Marshal(b, m, deterministic)
}
func (m *AlbumId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumId.Merge(m, src)
}
func (m *AlbumId) XXX_Size() int {
	return xxx_messageInfo_AlbumId.Size(m)
}
func (m *AlbumId) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumId.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumId proto.InternalMessageInfo

func (m *AlbumId) GetAlbumId() uint64 {
	if m != nil {
		return m.AlbumId
	}
	return 0
}

type AlbumBase struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Preview              string   `protobuf:"bytes,3,opt,name=Preview,proto3" json:"Preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlbumBase) Reset()         { *m = AlbumBase{} }
func (m *AlbumBase) String() string { return proto.CompactTextString(m) }
func (*AlbumBase) ProtoMessage()    {}
func (*AlbumBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{3}
}

func (m *AlbumBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumBase.Unmarshal(m, b)
}
func (m *AlbumBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumBase.Marshal(b, m, deterministic)
}
func (m *AlbumBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumBase.Merge(m, src)
}
func (m *AlbumBase) XXX_Size() int {
	return xxx_messageInfo_AlbumBase.Size(m)
}
func (m *AlbumBase) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumBase.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumBase proto.InternalMessageInfo

func (m *AlbumBase) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AlbumBase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlbumBase) GetPreview() string {
	if m != nil {
		return m.Preview
	}
	return ""
}

type AlbumsBase struct {
	Albums               []*AlbumBase `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AlbumsBase) Reset()         { *m = AlbumsBase{} }
func (m *AlbumsBase) String() string { return proto.CompactTextString(m) }
func (*AlbumsBase) ProtoMessage()    {}
func (*AlbumsBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{4}
}

func (m *AlbumsBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumsBase.Unmarshal(m, b)
}
func (m *AlbumsBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumsBase.Marshal(b, m, deterministic)
}
func (m *AlbumsBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumsBase.Merge(m, src)
}
func (m *AlbumsBase) XXX_Size() int {
	return xxx_messageInfo_AlbumsBase.Size(m)
}
func (m *AlbumsBase) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumsBase.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumsBase proto.InternalMessageInfo

func (m *AlbumsBase) GetAlbums() []*AlbumBase {
	if m != nil {
		return m.Albums
	}
	return nil
}

type AlbumResponse struct {
	Id                   uint64                 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Preview              string                 `protobuf:"bytes,3,opt,name=Preview,proto3" json:"Preview,omitempty"`
	ArtistId             uint64                 `protobuf:"varint,4,opt,name=ArtistId,proto3" json:"ArtistId,omitempty"`
	ArtistName           string                 `protobuf:"bytes,5,opt,name=ArtistName,proto3" json:"ArtistName,omitempty"`
	Tracks               *proto1.TracksResponse `protobuf:"bytes,6,opt,name=Tracks,proto3" json:"Tracks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AlbumResponse) Reset()         { *m = AlbumResponse{} }
func (m *AlbumResponse) String() string { return proto.CompactTextString(m) }
func (*AlbumResponse) ProtoMessage()    {}
func (*AlbumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{5}
}

func (m *AlbumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumResponse.Unmarshal(m, b)
}
func (m *AlbumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumResponse.Marshal(b, m, deterministic)
}
func (m *AlbumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumResponse.Merge(m, src)
}
func (m *AlbumResponse) XXX_Size() int {
	return xxx_messageInfo_AlbumResponse.Size(m)
}
func (m *AlbumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumResponse proto.InternalMessageInfo

func (m *AlbumResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AlbumResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlbumResponse) GetPreview() string {
	if m != nil {
		return m.Preview
	}
	return ""
}

func (m *AlbumResponse) GetArtistId() uint64 {
	if m != nil {
		return m.ArtistId
	}
	return 0
}

func (m *AlbumResponse) GetArtistName() string {
	if m != nil {
		return m.ArtistName
	}
	return ""
}

func (m *AlbumResponse) GetTracks() *proto1.TracksResponse {
	if m != nil {
		return m.Tracks
	}
	return nil
}

type AlbumsResponse struct {
	Albums               []*AlbumResponse `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AlbumsResponse) Reset()         { *m = AlbumsResponse{} }
func (m *AlbumsResponse) String() string { return proto.CompactTextString(m) }
func (*AlbumsResponse) ProtoMessage()    {}
func (*AlbumsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67eedbfa33965767, []int{6}
}

func (m *AlbumsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumsResponse.Unmarshal(m, b)
}
func (m *AlbumsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumsResponse.Marshal(b, m, deterministic)
}
func (m *AlbumsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumsResponse.Merge(m, src)
}
func (m *AlbumsResponse) XXX_Size() int {
	return xxx_messageInfo_AlbumsResponse.Size(m)
}
func (m *AlbumsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumsResponse proto.InternalMessageInfo

func (m *AlbumsResponse) GetAlbums() []*AlbumResponse {
	if m != nil {
		return m.Albums
	}
	return nil
}

func init() {
	proto.RegisterType((*IsLikedAlbum)(nil), "IsLikedAlbum")
	proto.RegisterType((*AlbumToUserId)(nil), "AlbumToUserId")
	proto.RegisterType((*AlbumId)(nil), "AlbumId")
	proto.RegisterType((*AlbumBase)(nil), "AlbumBase")
	proto.RegisterType((*AlbumsBase)(nil), "AlbumsBase")
	proto.RegisterType((*AlbumResponse)(nil), "AlbumResponse")
	proto.RegisterType((*AlbumsResponse)(nil), "AlbumsResponse")
}

func init() {
	proto.RegisterFile("album.proto", fileDescriptor_67eedbfa33965767)
}

var fileDescriptor_67eedbfa33965767 = []byte{
	// 505 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x84, 0x1a, 0x18, 0x03, 0xa9, 0xf6, 0x10, 0x59, 0x54, 0xaa, 0xd0, 0x56, 0x4d, 0xc8,
	0x65, 0x1d, 0x11, 0xa9, 0x1f, 0x47, 0x90, 0x2a, 0xcb, 0x52, 0x1b, 0x45, 0x6e, 0x72, 0xe9, 0xcd,
	0xc1, 0xd3, 0xc8, 0x8a, 0xed, 0x45, 0xde, 0x25, 0x11, 0xb7, 0xfe, 0xa6, 0xfe, 0xc2, 0xca, 0xb3,
	0x6b, 0x0a, 0x69, 0x7b, 0x40, 0x3d, 0x31, 0xcf, 0xf3, 0xe6, 0xed, 0xcc, 0xee, 0x1b, 0xc0, 0x4b,
	0xf2, 0xbb, 0x75, 0x21, 0x56, 0x95, 0xd4, 0x72, 0xec, 0xe9, 0x2a, 0x59, 0x3e, 0x58, 0x30, 0x54,
	0xa8, 0x54, 0x26, 0x4b, 0x0b, 0x5f, 0xdd, 0x4b, 0x79, 0x9f, 0x63, 0x40, 0xe8, 0x6e, 0xfd, 0x3d,
	0xc0, 0x62, 0xa5, 0x37, 0x26, 0xc9, 0xa7, 0x30, 0x88, 0xd4, 0xe7, 0xec, 0x01, 0xd3, 0x79, 0x2d,
	0xc7, 0x7c, 0xe8, 0x5a, 0xec, 0x3b, 0x13, 0x67, 0xda, 0x8b, 0x1b, 0xc8, 0xe7, 0x30, 0x24, 0xca,
	0x8d, 0xbc, 0x55, 0x58, 0x45, 0x29, 0x3b, 0x01, 0x77, 0x4d, 0x11, 0x31, 0xfb, 0xb1, 0x45, 0xb5,
	0x04, 0xb5, 0x16, 0xa5, 0x7e, 0x7b, 0xe2, 0x4c, 0x3b, 0x71, 0x03, 0xf9, 0x1b, 0xe8, 0xce, 0x4d,
	0xb8, 0x4b, 0x72, 0xf6, 0x49, 0x11, 0xf4, 0x89, 0xb4, 0x48, 0x14, 0xb2, 0x11, 0xb4, 0xb7, 0x8c,
	0x76, 0x94, 0x32, 0x06, 0x9d, 0xab, 0xa4, 0x40, 0x12, 0xee, 0xc7, 0x14, 0xd7, 0x52, 0xd7, 0x15,
	0x3e, 0x66, 0xf8, 0xe4, 0x1f, 0xd1, 0xe7, 0x06, 0xf2, 0x0b, 0x00, 0x92, 0x52, 0xa4, 0xc5, 0xc1,
	0xa5, 0x33, 0x94, 0xef, 0x4c, 0x8e, 0xa6, 0xde, 0x0c, 0xc4, 0xf6, 0x9c, 0xd8, 0x66, 0xf8, 0x4f,
	0xc7, 0x4e, 0x19, 0xa3, 0x5a, 0xc9, 0xf2, 0x7f, 0x3b, 0x60, 0x63, 0xe8, 0xcd, 0x2b, 0x9d, 0x29,
	0x1d, 0xa5, 0x7e, 0x87, 0x34, 0xb6, 0x98, 0xbd, 0x06, 0x30, 0x31, 0xe9, 0xbd, 0xa0, 0xc2, 0x9d,
	0x2f, 0xec, 0x0c, 0xdc, 0x9b, 0xfa, 0x55, 0x95, 0xef, 0x4e, 0x9c, 0xa9, 0x37, 0x3b, 0x16, 0x06,
	0x36, 0xad, 0xc5, 0x36, 0xcd, 0x3f, 0xc0, 0xc8, 0x8c, 0xb9, 0x6d, 0xfa, 0xf4, 0xd9, 0xa8, 0x23,
	0xb1, 0x37, 0x54, 0x33, 0xee, 0xec, 0x47, 0x07, 0x06, 0x94, 0xf9, 0x8a, 0xd5, 0x63, 0xb6, 0x44,
	0xf6, 0x0e, 0xfa, 0x21, 0xea, 0x38, 0x29, 0x53, 0x59, 0xb0, 0x13, 0x61, 0x9c, 0x23, 0x1a, 0xe7,
	0x88, 0x4f, 0xb5, 0x73, 0xc6, 0xc7, 0x62, 0xff, 0x38, 0xde, 0x62, 0x1f, 0x61, 0x10, 0xa2, 0xfe,
	0x22, 0x95, 0x26, 0xb3, 0x1c, 0x52, 0xfa, 0x1e, 0x20, 0x44, 0x7d, 0x2d, 0x57, 0xeb, 0x3c, 0xa9,
	0x0e, 0x29, 0xbc, 0x04, 0x37, 0x44, 0x7d, 0x85, 0x4f, 0x87, 0x14, 0x9d, 0x42, 0x2f, 0x44, 0x6d,
	0xbc, 0xde, 0x13, 0xd6, 0x8d, 0xe3, 0x67, 0xf7, 0xc3, 0x5b, 0x2c, 0x80, 0x97, 0x0d, 0x4f, 0x2d,
	0x36, 0x74, 0xd1, 0xac, 0x67, 0x1e, 0x20, 0x4a, 0xff, 0x26, 0x7c, 0x01, 0x9d, 0x7a, 0x74, 0x66,
	0xa5, 0x9a, 0x2d, 0x19, 0xff, 0xa3, 0x37, 0xde, 0x62, 0xe7, 0xe0, 0x9a, 0xdd, 0xfa, 0xa3, 0x66,
	0x28, 0x76, 0x77, 0x92, 0xb7, 0xd8, 0x0c, 0xdc, 0xdb, 0x32, 0x3f, 0x4c, 0xfe, 0x2d, 0x78, 0x21,
	0xea, 0xc5, 0xc6, 0x6e, 0x6b, 0x57, 0xd8, 0x0a, 0x4f, 0xfc, 0xde, 0x09, 0xde, 0x5a, 0x9c, 0x7f,
	0x3b, 0x2b, 0x92, 0xac, 0x0c, 0xb2, 0x52, 0x63, 0x55, 0x26, 0x79, 0x50, 0x64, 0xcb, 0x4a, 0x2a,
	0xe3, 0x07, 0x15, 0x90, 0x51, 0xec, 0x5f, 0x87, 0x4b, 0x3f, 0x97, 0xbf, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xbe, 0xa7, 0x1a, 0x10, 0x7a, 0x04, 0x00, 0x00,
}
