syntax = "proto3";

option go_package = "main/internal/microservices/album/proto";
import "track.proto";
import "session.proto";
import "google/protobuf/empty.proto";
//   protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative -I../proto -I../../session/proto -I../../track/proto  album.proto
service AlbumService {
  rpc GetRandom (google.protobuf.Empty) returns (AlbumsResponse) {}
  rpc GetMostLiked (google.protobuf.Empty) returns (AlbumsResponse) {}
  rpc GetPopular (google.protobuf.Empty) returns (AlbumsResponse) {}
  rpc GetNew (google.protobuf.Empty) returns (AlbumsResponse) {}
  rpc GetAlbum (AlbumId) returns (AlbumResponse) {}
  rpc GetAlbumByTrack(TrackId) returns (AlbumResponse) {}
  rpc Like (AlbumToUserId) returns (google.protobuf.Empty) {}
  rpc IsLike (AlbumToUserId) returns (IsLikedAlbum) {}
  rpc Unlike (AlbumToUserId) returns (google.protobuf.Empty) {}
  rpc GetByUserId (UserId) returns (AlbumsBase) {}
}

message IsLikedAlbum {
  bool IsLiked = 1;
}

message AlbumToUserId {
  string userId = 1;
  uint64 albumId = 2;
}

message AlbumId {
  uint64 albumId = 1;
}

message AlbumBase {
  uint64 Id = 1;
  string Name = 2;
  string Preview = 3;
  bool IsSingle = 4;
}

message AlbumsBase {
  repeated AlbumBase albums = 1;
}

message AlbumResponse {
  uint64 Id = 1;
  string Name = 2;
  string Preview = 3;
  bool IsSingle = 4;
  uint64 ArtistId = 5;
  string ArtistName = 6;
  TracksResponse Tracks = 7;
}

message AlbumsResponse {
  repeated AlbumResponse albums = 1;
}
