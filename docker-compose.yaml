version: '3.7'

services:
  service-minio:
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ~/minio:/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    
  service-createbucket:
    image: minio/mc
    depends_on:
      service-minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set musicon http://service-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing musicon/user-avatar;
      exit 0;
      "

  service-db-redis:
    restart: always
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  service-db-postgres:
    restart: always
    image: postgres:14
    env_file: ./database/db.env
    ports:
      - "5432:5432"
    volumes:
      - ./database/migrations/migration_1.sql:/docker-entrypoint-initdb.d/migration_1.sql
      - ./database/migrations/migration_2.sql:/docker-entrypoint-initdb.d/migration_2.sql
      - ~/db-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U musicon" ]
      interval: 10s
      retries: 3
      timeout: 5s

  musicon:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      service-db-postgres:
        condition: service_healthy
      service-db-redis:
        condition: service_healthy
      service-createbucket:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://musicon:musicon@service-db-postgres:5432/musicon
      - /etc/localtime:/etc/localtime:ro

  wait-musicon:
    image: alpine
    depends_on:
      - musicon
    command: >
      /bin/sh -c "apk add --no-cache curl && 
                  while true; do
                    if curl -s -o /dev/null http://musicon:8080; then
                      break;
                    fi;
                    sleep 1;
                  done;"
