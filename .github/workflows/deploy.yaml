name: ci/cd

on:
  push:
    branches: [main, PK-2]
  pull_request:
    types: [opened, reopened, closed]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go 
        uses: actions/setup-go@v4 
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        run: go mod download && go mod tidy
      - name: Build musicon
        run: go build -o bin/musicon cmd/musicon/main.go
  
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: golangci-lint
  #     uses: golangci/golangci-lint-action@v3
  #     with:
  #       version: latest
  #       skip-pkg-cache: true
  #       skip-build-cache: true
      
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go 
        uses: actions/setup-go@v4 
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        run: |
          go mod download && go mod tidy 
          go install github.com/golang/mock/mockgen@v1.6.0
      - name: Run unit test
        run: make unit-test

  integration-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Install dependencies
        run: pip3 install requests names
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Run integration test
        run: make integration-test

  # build-publish:
  #   needs: 
  #     - unit-test
  #     - integration-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Build and export
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         tags: musicon:latest
  #         outputs: type=docker,dest=/tmp/musicon-image.tar
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: musicon-image
  #         path: /tmp/musicon-image.tar

  deploy:
    if: github.event.pull_request.merged == true
    # if: github.ref == 'refs/heads/main'
    needs:
      - unit-test
      - integration-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy repository content to VM
        uses: appleboy/scp-action@master
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          PASSWORD: ${{ secrets.PASSWORD }}
          source: "."
          target: ~/addo-backend
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          PASSWORD: ${{ secrets.PASSWORD }}
          script: cd addo-backend && make deploy
