name: continuous-deployment

on:
  push:
    branches: [main, PK-3]
  pull_request:
    types: [opened, reopened, closed]

jobs:    
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build base image
        run: docker build -t registry.musicon.space/base -f build/package/base/Dockerfile .
      - name: Build micros image
        run: build/ci/scripts/build/build_micros.sh
      - uses: actions/upload-artifact@v3
        with:
          name: images
          path: /tmp/images/
          retention-days: 1

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go 
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0
      - name: Generate mocks
        run: make mocks-gen
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          skip-pkg-cache: true
          skip-build-cache: true
  
  unit-test:
    needs: 
      - build
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go 
        uses: actions/setup-go@v4 
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        run: |
          go mod download && go mod tidy 
          go install github.com/golang/mock/mockgen@v1.6.0
      - name: Run unit test
        run: make unit-test

  integration-test:
    needs: 
      - build
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: images
          path: /tmp/images/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Load docker images
        run: build/ci/scripts/load/load_micros.sh test
      - name: Docker images
        run: docker images
      - name: Setup python3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Install python dependencies
        run: pip3 install requests names
      - name: Run integration test
        run: scripts/integration-test.sh 

  publish:
    if: github.event.pull_request.merged == true
    # if: github.ref == 'refs/heads/main'
    needs:
      - unit-test
      - integration-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: images
          path: /tmp/images/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Private Docker Registry
        uses: docker/login-action@v1
        with:
          registry: registry.musicon.space
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}  
      - name: Publish docker images
        run: build/ci/scripts/publish/publish_micros.sh ${{ github.ref_name }}-${{ github.run_id }}

  deploy:
    name: deploy
    # if: github.ref == 'refs/heads/master'
    if: github.event.pull_request.merged == true
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: https://185.151.147.27:6443
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        id: install
      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: musicon
          manifests: |
            deployments/prod/entrypoint
            deployments/prod/redis
            deployments/prod/micros
          images: |
            registry.musicon.space/entrypoint:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/album:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/artist:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/image:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/playlist:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/session:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/track:${{ github.ref_name }}-${{ github.run_id }}
            registry.musicon.space/user:${{ github.ref_name }}-${{ github.run_id }}
          imagepullsecrets: regcred